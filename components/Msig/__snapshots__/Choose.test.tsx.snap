// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Choose it renders correctly after entering a valid safe id 1`] = `
.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
}

.c6 svg path {
  stroke: var(--black);
}

.c6:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c6:hover svg path {
  stroke: var(--purple-medium);
}

.c6:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c6:active svg path {
  stroke: var(--white) !important;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
}

.c7 svg path {
  stroke: var(--black);
}

.c7:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c7:hover svg path {
  stroke: var(--purple-medium);
}

.c7:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c7:active svg path {
  stroke: var(--white) !important;
}

.c7 svg path {
  stroke: var(--white);
}

.c7:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c7:hover svg path {
  stroke: var(--green-medium);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  text-align: left;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 * {
  text-align: center;
}

.c3 span.info,
.c3 span.error {
  font-size: 0.875rem;
}

.c3 span.error {
  color: var(--red-medium);
}

.c3 .text-input-wrapper {
  position: relative;
}

.c3 .text-input-wrapper input {
  width: 100%;
}

.c3 .text-input-wrapper .unit {
  position: absolute;
  top: 50%;
  right: 1em;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: var(--purple-medium);
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 > header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  margin: 1.5em 0;
}

.c5 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  max-width: 35em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <h2>
      Safe ID
    </h2>
    <hr />
    <form>
      <label
        class="c3"
      >
        <span>
          Please enter your Safe ID below to continue
        </span>
        
        <div
          class="text-input-wrapper"
        >
          <input
            class=""
            max=""
            min=""
            name="safe-id"
            placeholder="f2..."
            step=""
            style="padding-right: 1em;"
            type="text"
            value="f2yrhsjwuwypy4gsv2lcikphizkusqe2gp3pp4w5q"
          />
          
        </div>
        
      </label>
    </form>
    <p>
      Don't have a Safe ID?
       
      <a
        href="/create"
      >
        Create one
      </a>
    </p>
  </div>
  <div
    class="c4 c5"
  >
    <button
      class="c6"
    >
      Back
    </button>
    <button
      class="c7"
    >
      Submit
    </button>
  </div>
</div>
`;

exports[`Choose it renders correctly after entering an invalid safe id 1`] = `
.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
}

.c6 svg path {
  stroke: var(--black);
}

.c6:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c6:hover svg path {
  stroke: var(--purple-medium);
}

.c6:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c6:active svg path {
  stroke: var(--white) !important;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c7 svg path {
  stroke: var(--black);
}

.c7:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c7:hover svg path {
  stroke: var(--purple-medium);
}

.c7:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c7:active svg path {
  stroke: var(--white) !important;
}

.c7 svg path {
  stroke: var(--white);
}

.c7:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c7:hover svg path {
  stroke: var(--green-medium);
}

.c7 svg path {
  stroke: var(--gray-medium);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  text-align: left;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 * {
  text-align: center;
}

.c3 span.info,
.c3 span.error {
  font-size: 0.875rem;
}

.c3 span.error {
  color: var(--red-medium);
}

.c3 .text-input-wrapper {
  position: relative;
}

.c3 .text-input-wrapper input {
  width: 100%;
}

.c3 .text-input-wrapper .unit {
  position: absolute;
  top: 50%;
  right: 1em;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: var(--purple-medium);
  color: var(--red-dark) !important;
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 > header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  margin: 1.5em 0;
}

.c5 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  max-width: 35em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <h2>
      Safe ID
    </h2>
    <hr />
    <form>
      <label
        class="c3"
      >
        <span>
          Please enter your Safe ID below to continue
        </span>
        
        <div
          class="text-input-wrapper"
        >
          <input
            class="error"
            max=""
            min=""
            name="safe-id"
            placeholder="f2..."
            step=""
            style="padding-right: 1em;"
            type="text"
            value="t1iuryu3ke2hewrcxp4ezhmr5cmfeq3wjhpxaucza"
          />
          
        </div>
        <span
          class="error"
        >
          Second character must be 0 or 2
        </span>
      </label>
    </form>
    <p>
      Don't have a Safe ID?
       
      <a
        href="/create"
      >
        Create one
      </a>
    </p>
  </div>
  <div
    class="c4 c5"
  >
    <button
      class="c6"
    >
      Back
    </button>
    <button
      class="c7"
      disabled=""
    >
      Submit
    </button>
  </div>
</div>
`;

exports[`Choose it renders the initial state correctly 1`] = `
.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
}

.c6 svg path {
  stroke: var(--black);
}

.c6:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c6:hover svg path {
  stroke: var(--purple-medium);
}

.c6:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c6:active svg path {
  stroke: var(--white) !important;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c7 svg path {
  stroke: var(--black);
}

.c7:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c7:hover svg path {
  stroke: var(--purple-medium);
}

.c7:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c7:active svg path {
  stroke: var(--white) !important;
}

.c7 svg path {
  stroke: var(--white);
}

.c7:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c7:hover svg path {
  stroke: var(--green-medium);
}

.c7 svg path {
  stroke: var(--gray-medium);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  text-align: left;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 * {
  text-align: center;
}

.c3 span.info,
.c3 span.error {
  font-size: 0.875rem;
}

.c3 span.error {
  color: var(--red-medium);
}

.c3 .text-input-wrapper {
  position: relative;
}

.c3 .text-input-wrapper input {
  width: 100%;
}

.c3 .text-input-wrapper .unit {
  position: absolute;
  top: 50%;
  right: 1em;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: var(--purple-medium);
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 > header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  margin: 1.5em 0;
}

.c5 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  max-width: 35em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 10px;
}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <h2>
      Safe ID
    </h2>
    <hr />
    <form>
      <label
        class="c3"
      >
        <span>
          Please enter your Safe ID below to continue
        </span>
        
        <div
          class="text-input-wrapper"
        >
          <input
            class=""
            max=""
            min=""
            name="safe-id"
            placeholder="f2..."
            step=""
            style="padding-right: 1em;"
            type="text"
            value=""
          />
          
        </div>
        
      </label>
    </form>
    <p>
      Don't have a Safe ID?
       
      <a
        href="/create"
      >
        Create one
      </a>
    </p>
  </div>
  <div
    class="c4 c5"
  >
    <button
      class="c6"
    >
      Back
    </button>
    <button
      class="c7"
      disabled=""
    >
      Submit
    </button>
  </div>
</div>
`;
